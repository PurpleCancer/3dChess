#version 130

out vec4 pixelColor;

in vec3 Normal;
in vec3 FragmentPosition;

uniform vec3 light1Position;

vec3 lightColor =vec3(1.0f,1.0f,1.0f);

vec3 objectColor=vec3(1.0f, 0.5f, 0.31f);

vec3 lightPosition=vec3(10,10,10);

void main()
{
    float ambientStrength = 0.1f;
    vec3 ambient = ambientStrength * lightColor;


    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPosition - FragmentPosition);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    vec3 result = (ambient + diffuse) * objectColor;
    pixelColor = vec4(result, 1.0f);


    //pixelColor=vec4(ambient,1.0f);
}  